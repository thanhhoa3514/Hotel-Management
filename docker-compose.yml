version: '3.8'

services:
  postgres:
    image: postgres:15-alpine
    container_name: hotel_postgres
    environment:
      POSTGRES_DB: hotelmanagement
      POSTGRES_USER: hoteluser
      POSTGRES_PASSWORD: hotelpass123
    ports:
      - "5432:5432"
    volumes:
      - postgres_data:/var/lib/postgresql/data
      - ./init-scripts:/docker-entrypoint-initdb.d
    networks:
      - hotel_network
    healthcheck:
      test: ["CMD-SHELL", "pg_isready -U hoteluser -d hotelmanagement"]
      interval: 10s
      timeout: 5s
      retries: 5

  keycloak:
    image: quay.io/keycloak/keycloak:23.0.0
    container_name: hotel_keycloak
    environment:
      KEYCLOAK_ADMIN: admin
      KEYCLOAK_ADMIN_PASSWORD: admin123
      KC_DB: postgres
      KC_DB_URL: jdbc:postgresql://postgres:5432/keycloak
      KC_DB_USERNAME: hoteluser
      KC_DB_PASSWORD: hotelpass123
      KC_HOSTNAME: localhost
      KC_HOSTNAME_STRICT: false
      KC_HTTP_ENABLED: true
    command:
      - start-dev
    ports:
      - "8180:8080"
    depends_on:
      postgres:
        condition: service_healthy
    networks:
      - hotel_network
    healthcheck:
      test: ["CMD-SHELL", "curl -f http://localhost:8080/health/ready || exit 1"]
      interval: 30s
      timeout: 10s
      retries: 5
      start_period: 60s

  backend:
    build:
      context: ./hotelmanagement
      dockerfile: Dockerfile
    container_name: hotel_backend
    environment:
      SPRING_DATASOURCE_URL: jdbc:postgresql://postgres:5432/hotelmanagement
      SPRING_DATASOURCE_USERNAME: hoteluser
      SPRING_DATASOURCE_PASSWORD: hotelpass123
      KEYCLOAK_AUTH_SERVER_URL: http://keycloak:8080
      KEYCLOAK_REALM: hotel-realm
      KEYCLOAK_RESOURCE: hotel-backend
    ports:
      - "8080:8080"
    depends_on:
      postgres:
        condition: service_healthy
      keycloak:
        condition: service_healthy
    networks:
      - hotel_network
    restart: unless-stopped

volumes:
  postgres_data:
    driver: local

networks:
  hotel_network:
    driver: bridge

